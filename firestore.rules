rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isLider() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'lider';
    }
    
    function isVoluntario() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'voluntario';
    }

    // Regras para coleção users
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isLider());
      allow create: if isLider();
      allow update: if isLider();
      allow delete: if isLider();
    }

    // Regras para coleção membros
    match /membros/{membroId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isLider();
      allow delete: if isLider();
    }

    // Regras para coleção visitantes
    match /visitantes/{visitanteId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isLider();
    }
  }
}